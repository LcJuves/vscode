# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: NodeJS CI

on:
  push:
    branches: [dev/liangchengj]
  # pull_request:
  #   branches: [ feature ]

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-18.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SPLIT_LINE: =============================
      VS_UPDATE_URL_PREFIX: https://update.code.visualstudio.com
      VS_ZIP_FNAME: VSCode-darwin-universal.zip

    strategy:
      matrix:
        arch: [x64, arm64, ia32, armhf]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y libxkbfile-dev pkg-config libsecret-1-dev libxss1 dbus xvfb libgtk-3-0 libgbm1
          sudo cp build/azure-pipelines/linux/xvfb.init /etc/init.d/xvfb
          sudo chmod +x /etc/init.d/xvfb
          sudo update-rc.d xvfb defaults
          sudo service xvfb start
          sudo apt-get install -y fakeroot rpm
          sudo apt-get install -y snapcraft

      - uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Compute node modules cache key
        id: nodeModulesCacheKey
        run: echo "::set-output name=value::$(node build/azure-pipelines/common/computeNodeModulesCacheKey.js)"
      - name: Cache node modules
        id: cacheNodeModules
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-cacheNodeModules14-${{ steps.nodeModulesCacheKey.outputs.value }}
          restore-keys: ${{ runner.os }}-cacheNodeModules14-
      - name: Get yarn cache directory path
        id: yarnCacheDirPath
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn directory
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarnCacheDirPath.outputs.dir }}
          key: ${{ runner.os }}-yarnCacheDir-${{ steps.nodeModulesCacheKey.outputs.value }}
          restore-keys: ${{ runner.os }}-yarnCacheDir-
      - name: Execute yarn
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1
        run: yarn --frozen-lockfile --network-timeout 180000

      - name: Update Configurations
        run: |
          export PKGVER=`node -p "require('./package.json')['version']"`
          echo "PKGVER >>> $PKGVER"
          export VS_ZIP_URL="${{ env.VS_UPDATE_URL_PREFIX }}/${PKGVER}/darwin-universal/stable"
          echo "VS_ZIP_URL >>> $VS_ZIP_URL"
          export CURL_DO_URL=`curl -is "$VS_ZIP_URL" | grep Location | awk -F ": " '{print $2}' | tr -d "\r|\n"`
          echo "CURL_DO_URL >>> $CURL_DO_URL"
          curl -L -o ${{ env.VS_ZIP_FNAME }} "$CURL_DO_URL"
          npm install extract-zip@2.0.1 -g
          extract-zip ${{ env.VS_ZIP_FNAME }}
          cp 'Visual Studio Code.app/Contents/Resources/app/product.json' ./vs-product.json
          node ./.github/updateProduct.js
        shell: bash

      - name: Build and Package
        run: |
          yarn gulp vscode-linux-${{ matrix.arch }}-min
          bash -c "cd .. && cp -r VSCode-linux-${{ matrix.arch }} CodeOSS-linux-${{ matrix.arch }}"
          bash -c "cd .. && tar -cvJf CodeOSS-linux-${{ matrix.arch }}.tar.xz CodeOSS-linux-${{ matrix.arch }}"
          mv ../CodeOSS-linux-${{ matrix.arch }}.tar.xz .

          if [ "${{ matrix.arch }}" != "ia32" ] ; then
              yarn gulp vscode-reh-linux-${{ matrix.arch }}-min
              bash -c "cd .. && mv vscode-reh-linux-${{ matrix.arch }} vscode-server-linux-${{ matrix.arch }}"
              bash -c "cd .. && tar -zcvf vscode-server-linux-${{ matrix.arch }}.tar.gz vscode-server-linux-${{ matrix.arch }}"
              mv ../vscode-server-linux-${{ matrix.arch }}.tar.gz .

              yarn gulp vscode-reh-web-linux-${{ matrix.arch }}-min
              bash -c "cd .. && mv vscode-reh-web-linux-${{ matrix.arch }} vscode-server-linux-${{ matrix.arch }}-web"
              bash -c "cd .. && tar -zcvf vscode-server-linux-${{ matrix.arch }}-web.tar.gz vscode-server-linux-${{ matrix.arch }}-web"
              mv ../vscode-server-linux-${{ matrix.arch }}-web.tar.gz .

              yarn gulp vscode-linux-${{ matrix.arch }}-build-rpm
              mv .build/linux/rpm/*/*.rpm CodeOSS-linux-${{ matrix.arch }}.$(ls .build/linux/rpm/*/*.rpm | awk -F "." '{print $5}').rpm

              yarn gulp vscode-linux-${{ matrix.arch }}-build-deb
              cp .build/linux/deb/*/deb/*.deb CodeOSS-linux-${{ matrix.arch }}.deb

              # yarn gulp vscode-linux-${{ matrix.arch }}-build-snap
          fi

          if [ "${{ matrix.arch }}" != "x64" ] ; then
              rm -f ./product.json
          fi

          if [ "${{ matrix.arch }}" == "x64" ] ; then
              curl -fsSL https://deno.land/x/install/install.sh | sh
              export DENO_INSTALL="/home/$(whoami)/.deno" && export PATH="$DENO_INSTALL/bin:$PATH"

              echo "${{ env.SPLIT_LINE }}${{ env.SPLIT_LINE }}${{ env.SPLIT_LINE }}${{ env.SPLIT_LINE }}"
              echo "${{ env.SPLIT_LINE }}${{ env.SPLIT_LINE }}${{ env.SPLIT_LINE }}${{ env.SPLIT_LINE }}"

              deno fmt ./product.json
              deno run --allow-read --allow-net https://deno.land/std@0.104.0/http/file_server.ts > dfserv.log 2>&1 &
              sleep 20 && (netstat -tlnp | grep 4507) && cat dfserv.log

              echo "${{ env.SPLIT_LINE }}${{ env.SPLIT_LINE }}${{ env.SPLIT_LINE }}${{ env.SPLIT_LINE }}"
              echo "${{ env.SPLIT_LINE }}${{ env.SPLIT_LINE }}${{ env.SPLIT_LINE }}${{ env.SPLIT_LINE }}"

              mv .build/linux/deb/*/deb/*.deb . && export DOWNLOAD_URL="http://127.0.0.1:4507/$(ls *_*.deb)" && echo $DOWNLOAD_URL
              export APPLICATION_NAME=$(node -p "require('./product.json')['applicationName']") && echo $APPLICATION_NAME
              export LINUX_ICON_NAME=$(node -p "require('./product.json')['linuxIconName']") && echo $LINUX_ICON_NAME

              URI="$(wget -q https://github.com/AppImage/pkg2appimage/releases -O - | grep "pkg2appimage-.*-x86_64.AppImage" | head -n 1 | cut -d '"' -f 2)"
              wget -c "https://github.com/${URI}"

              chmod +x ./pkg2appimage-*.AppImage && ./pkg2appimage-*.AppImage .github/CodeOSS-AppImage.yml
              mv out/*.AppImage CodeOSS-linux-${{ matrix.arch }}.AppImage
          fi
        shell: bash

      - name: Generate SHA512 checksum files
        run: |
          if [ -f "CodeOSS-linux-${{ matrix.arch }}.tar.xz" ] ; then
              sha512sum CodeOSS-linux-${{ matrix.arch }}.tar.xz | awk '{print $1}' > CodeOSS-linux-${{ matrix.arch }}.tar.xz.sha512
          fi

          if [ -f "vscode-server-linux-${{ matrix.arch }}.tar.gz" ] ; then
              sha512sum vscode-server-linux-${{ matrix.arch }}.tar.gz | awk '{print $1}' > vscode-server-linux-${{ matrix.arch }}.tar.gz.sha512
          fi

          if [ -f "vscode-server-linux-${{ matrix.arch }}-web.tar.gz" ] ; then
              sha512sum vscode-server-linux-${{ matrix.arch }}-web.tar.gz | awk '{print $1}' > vscode-server-linux-${{ matrix.arch }}-web.tar.gz.sha512
          fi

          if [ ! -z "$(ls | grep -E "CodeOSS-linux-${{ matrix.arch }}.*\.rpm$")" ] ; then
              sha512sum CodeOSS-linux-${{ matrix.arch }}*.rpm > tmpret && cat tmpret | awk '{print $1}' > "$(cat tmpret | awk '{print $2}')".sha512
          fi

          if [ -f "CodeOSS-linux-${{ matrix.arch }}.deb" ] ; then
              sha512sum CodeOSS-linux-${{ matrix.arch }}.deb | awk '{print $1}' > CodeOSS-linux-${{ matrix.arch }}.deb.sha512
          fi

          if [ -f "CodeOSS-linux-${{ matrix.arch }}.AppImage" ] ; then
              sha512sum CodeOSS-linux-${{ matrix.arch }}.AppImage | awk '{print $1}' > CodeOSS-linux-${{ matrix.arch }}.AppImage.sha512
          fi

          if [ -f "product.json" ] ; then
              sha512sum product.json | awk '{print $1}' > product.json.sha512
          fi
        shell: bash

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: dev_test_part13
          tag_name: dev_test_part13
          prerelease: true
          files: |
            CodeOSS-linux-${{ matrix.arch }}.tar.xz
            CodeOSS-linux-${{ matrix.arch }}.tar.xz.sha512
            CodeOSS-linux-${{ matrix.arch }}*.rpm
            CodeOSS-linux-${{ matrix.arch }}*.rpm.sha512
            CodeOSS-linux-*.deb
            CodeOSS-linux-*.deb.sha512
            CodeOSS-linux-${{ matrix.arch }}.AppImage
            CodeOSS-linux-${{ matrix.arch }}.AppImage.sha512
            vscode-server-linux-${{ matrix.arch }}.tar.gz
            vscode-server-linux-${{ matrix.arch }}.tar.gz.sha512
            vscode-server-linux-${{ matrix.arch }}-web.tar.gz
            vscode-server-linux-${{ matrix.arch }}-web.tar.gz.sha512
            product.json
            product.json.sha512

  darwin:
    name: macOS
    runs-on: macos-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      VS_UPDATE_URL_PREFIX: https://update.code.visualstudio.com
      VS_ZIP_FNAME: VSCode-darwin-universal.zip

    strategy:
      matrix:
        arch: [x64, arm64]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Compute node modules cache key
        id: nodeModulesCacheKey
        run: echo "::set-output name=value::$(node build/azure-pipelines/common/computeNodeModulesCacheKey.js)"
      - name: Cache node modules
        id: cacheNodeModules
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-cacheNodeModules14-${{ steps.nodeModulesCacheKey.outputs.value }}
          restore-keys: ${{ runner.os }}-cacheNodeModules14-
      - name: Get yarn cache directory path
        id: yarnCacheDirPath
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn directory
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarnCacheDirPath.outputs.dir }}
          key: ${{ runner.os }}-yarnCacheDir-${{ steps.nodeModulesCacheKey.outputs.value }}
          restore-keys: ${{ runner.os }}-yarnCacheDir-
      - name: Execute yarn
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1
        run: yarn --frozen-lockfile --network-timeout 180000

      - name: Update Configurations
        run: |
          export PKGVER=`node -p "require('./package.json')['version']"`
          echo "PKGVER >>> $PKGVER"
          export VS_ZIP_URL="${{ env.VS_UPDATE_URL_PREFIX }}/${PKGVER}/darwin-universal/stable"
          echo "VS_ZIP_URL >>> $VS_ZIP_URL"
          export CURL_DO_URL=`curl -is "$VS_ZIP_URL" | grep Location | awk -F ": " '{print $2}' | tr -d "\r|\n"`
          echo "CURL_DO_URL >>> $CURL_DO_URL"
          curl -L -o ${{ env.VS_ZIP_FNAME }} "$CURL_DO_URL"
          npm install extract-zip@2.0.1 -g
          extract-zip ${{ env.VS_ZIP_FNAME }}
          cp 'Visual Studio Code.app/Contents/Resources/app/product.json' ./vs-product.json
          node ./.github/updateProduct.js
        shell: bash

      - name: Build and Package
        run: |
          yarn gulp vscode-darwin-${{ matrix.arch }}-min
          bash -c "cd .. && cp -r VSCode-darwin-${{ matrix.arch }} CodeOSS-darwin-${{ matrix.arch }}"
          bash -c "cd .. && tar -cvJf CodeOSS-darwin-${{ matrix.arch }}.tar.xz CodeOSS-darwin-${{ matrix.arch }}"
          mv ../CodeOSS-darwin-${{ matrix.arch }}.tar.xz .

          npm i -g @ffflorian/jszip-cli@3.1.6
          bash -c "cd .. && jszip-cli add CodeOSS-darwin-${{ matrix.arch }} --output CodeOSS-darwin-${{ matrix.arch }}.zip"
          mv ../CodeOSS-darwin-${{ matrix.arch }}.zip .

          if [ "${{ matrix.arch }}" == "x64" ] ; then
              yarn gulp vscode-reh-darwin-min
              bash -c "cd .. && mv vscode-reh-darwin vscode-server-darwin"
              bash -c "cd .. && jszip-cli add vscode-server-darwin --output vscode-server-darwin.zip"
              mv ../vscode-server-darwin.zip .

              yarn gulp vscode-reh-web-darwin-min
              bash -c "cd .. && mv vscode-reh-web-darwin vscode-server-darwin-web"
              bash -c "cd .. && jszip-cli add vscode-server-darwin-web --output vscode-server-darwin-web.zip"
              mv ../vscode-server-darwin-web.zip .
          fi
        shell: bash

      - name: Generate SHA512 checksum files
        run: |
          npm install -g checksum
          checksum -a sha512 CodeOSS-darwin-${{ matrix.arch }}.tar.xz | awk '{print $1}' > CodeOSS-darwin-${{ matrix.arch }}.tar.xz.sha512
          checksum -a sha512 CodeOSS-darwin-${{ matrix.arch }}.zip | awk '{print $1}' > CodeOSS-darwin-${{ matrix.arch }}.zip.sha512

          if [ -f "vscode-server-darwin.zip" ] ; then
              checksum -a sha512 vscode-server-darwin.zip | awk '{print $1}' > vscode-server-darwin.zip.sha512
          fi

          if [ -f "vscode-server-darwin-web.zip" ] ; then
              checksum -a sha512 vscode-server-darwin-web.zip | awk '{print $1}' > vscode-server-darwin-web.zip.sha512
          fi
        shell: bash

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: dev_test_part13
          tag_name: dev_test_part13
          prerelease: true
          files: |
            CodeOSS-darwin-${{ matrix.arch }}.tar.xz
            CodeOSS-darwin-${{ matrix.arch }}.tar.xz.sha512
            CodeOSS-darwin-${{ matrix.arch }}.zip
            CodeOSS-darwin-${{ matrix.arch }}.zip.sha512
            vscode-server-darwin.zip
            vscode-server-darwin.zip.sha512
            vscode-server-darwin-web.zip
            vscode-server-darwin-web.zip.sha512

  windows:
    name: Windows
    runs-on: windows-2016
    env:
      CHILD_CONCURRENCY: "1"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CODE_ICO_URL: https://raw.githubusercontent.com/LiangchengJ/vscode/94cba4eb314f52fd18b47b72459954fda65302d0/resources/win32/code.ico
      VS_UPDATE_URL_PREFIX: https://update.code.visualstudio.com
      VS_ZIP_FNAME: VSCode-darwin-universal.zip

    strategy:
      matrix:
        arch: [x64, arm64, ia32]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 14

      - uses: actions/setup-python@v2
        with:
          python-version: "2.x"

      - name: Compute node modules cache key
        id: nodeModulesCacheKey
        run: echo "::set-output name=value::$(node build/azure-pipelines/common/computeNodeModulesCacheKey.js)"
      - name: Cache node_modules archive
        id: cacheNodeModules
        uses: actions/cache@v2
        with:
          path: ".build/node_modules_cache"
          key: "${{ runner.os }}-cacheNodeModulesArchive-${{ steps.nodeModulesCacheKey.outputs.value }}"
      - name: Extract node_modules archive
        if: ${{ steps.cacheNodeModules.outputs.cache-hit == 'true' }}
        run: 7z.exe x .build/node_modules_cache/cache.7z -aos
      - name: Get yarn cache directory path
        id: yarnCacheDirPath
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn directory
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarnCacheDirPath.outputs.dir }}
          key: ${{ runner.os }}-yarnCacheDir-${{ steps.nodeModulesCacheKey.outputs.value }}
          restore-keys: ${{ runner.os }}-yarnCacheDir-
      - name: Execute yarn
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1
        run: yarn --frozen-lockfile --network-timeout 180000
      - name: Create node_modules archive
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        run: |
          mkdir -Force .build
          node build/azure-pipelines/common/listNodeModules.js .build/node_modules_list.txt
          mkdir -Force .build/node_modules_cache
          7z.exe a .build/node_modules_cache/cache.7z -mx3 `@.build/node_modules_list.txt

      - name: Update Configurations
        run: |
          export PKGVER=`node -p "require('./package.json')['version']"`
          echo "PKGVER >>> $PKGVER"
          export VS_ZIP_URL="${{ env.VS_UPDATE_URL_PREFIX }}/${PKGVER}/darwin-universal/stable"
          echo "VS_ZIP_URL >>> $VS_ZIP_URL"
          export CURL_DO_URL=`curl -is "$VS_ZIP_URL" | grep Location | awk -F ": " '{print $2}' | tr -d "\r|\n"`
          echo "CURL_DO_URL >>> $CURL_DO_URL"
          curl -L -o ${{ env.VS_ZIP_FNAME }} "$CURL_DO_URL"
          npm install extract-zip@2.0.1 -g
          extract-zip ${{ env.VS_ZIP_FNAME }}
          cp 'Visual Studio Code.app/Contents/Resources/app/product.json' ./vs-product.json
          node ./.github/updateProduct.js
          node ./.github/updateWin32VisualElementsManifest.js
        shell: bash

      - name: Build and Package
        run: |
          yarn gulp vscode-win32-${{ matrix.arch }}-min
          bash -c "cd .. && cp -r VSCode-win32-${{ matrix.arch }} CodeOSS-win32-${{ matrix.arch }}"
          bash -c "cd .. && tar -cvJf CodeOSS-win32-${{ matrix.arch }}.tar.xz CodeOSS-win32-${{ matrix.arch }}"
          mv ../CodeOSS-win32-${{ matrix.arch }}.tar.xz .

          bash -c "cd .. && 7z a CodeOSS-win32-${{ matrix.arch }}.zip CodeOSS-win32-${{ matrix.arch }} -r -mx9"
          mv ../CodeOSS-win32-${{ matrix.arch }}.zip .

          if [ "${{ matrix.arch }}" != "arm64" ] ; then
              yarn gulp vscode-reh-win32-${{ matrix.arch }}-min
              bash -c "cd .. && mv vscode-reh-win32-${{ matrix.arch }} vscode-server-win32-${{ matrix.arch }}"
              bash -c "cd .. && 7z a vscode-server-win32-${{ matrix.arch }}.zip vscode-server-win32-${{ matrix.arch }} -r -mx9"
              mv ../vscode-server-win32-${{ matrix.arch }}.zip .

              yarn gulp vscode-reh-web-win32-${{ matrix.arch }}-min
              bash -c "cd .. && mv vscode-reh-web-win32-${{ matrix.arch }} vscode-server-win32-${{ matrix.arch }}-web"
              bash -c "cd .. && 7z a vscode-server-win32-${{ matrix.arch }}-web.zip vscode-server-win32-${{ matrix.arch }}-web -r -mx9"
              mv ../vscode-server-win32-${{ matrix.arch }}-web.zip .
          fi

          yarn gulp vscode-win32-${{ matrix.arch }}-inno-updater
          curl -o resources/win32/code.ico ${{ env.CODE_ICO_URL }}

          yarn gulp vscode-win32-${{ matrix.arch }}-user-setup
          mv .build/win32-${{ matrix.arch }}/user-setup/VSCodeSetup.exe CodeOSSUserSetup-win32-${{ matrix.arch }}.exe

          yarn gulp vscode-win32-${{ matrix.arch }}-system-setup
          mv .build/win32-${{ matrix.arch }}/system-setup/VSCodeSetup.exe CodeOSSSystemSetup-win32-${{ matrix.arch }}.exe

        shell: bash

      - name: Generate SHA512 checksum files
        run: |
          sha512sum CodeOSS-win32-${{ matrix.arch }}.tar.xz | awk '{print $1}' > CodeOSS-win32-${{ matrix.arch }}.tar.xz.sha512
          sha512sum CodeOSS-win32-${{ matrix.arch }}.zip | awk '{print $1}' > CodeOSS-win32-${{ matrix.arch }}.zip.sha512
          sha512sum CodeOSSUserSetup-win32-${{ matrix.arch }}.exe | awk '{print $1}' > CodeOSSUserSetup-win32-${{ matrix.arch }}.exe.sha512
          sha512sum CodeOSSSystemSetup-win32-${{ matrix.arch }}.exe | awk '{print $1}' > CodeOSSSystemSetup-win32-${{ matrix.arch }}.exe.sha512

          if [ -f "vscode-server-win32-${{ matrix.arch }}.zip" ] ; then
              sha512sum vscode-server-win32-${{ matrix.arch }}.zip | awk '{print $1}' > vscode-server-win32-${{ matrix.arch }}.zip.sha512
          fi

          if [ -f "vscode-server-win32-${{ matrix.arch }}-web.zip" ] ; then
              sha512sum vscode-server-win32-${{ matrix.arch }}-web.zip | awk '{print $1}' > vscode-server-win32-${{ matrix.arch }}-web.zip.sha512
          fi
        shell: bash

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: dev_test_part13
          tag_name: dev_test_part13
          prerelease: true
          files: |
            CodeOSS-win32-${{ matrix.arch }}.tar.xz
            CodeOSS-win32-${{ matrix.arch }}.tar.xz.sha512
            CodeOSS-win32-${{ matrix.arch }}.zip
            CodeOSS-win32-${{ matrix.arch }}.zip.sha512
            CodeOSSUserSetup-win32-${{ matrix.arch }}.exe
            CodeOSSUserSetup-win32-${{ matrix.arch }}.exe.sha512
            CodeOSSSystemSetup-win32-${{ matrix.arch }}.exe
            CodeOSSSystemSetup-win32-${{ matrix.arch }}.exe.sha512
            vscode-server-win32-${{ matrix.arch }}.zip
            vscode-server-win32-${{ matrix.arch }}.zip.sha512
            vscode-server-win32-${{ matrix.arch }}-web.zip
            vscode-server-win32-${{ matrix.arch }}-web.zip.sha512
